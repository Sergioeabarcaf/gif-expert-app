{"version":3,"sources":["components/AddCategory.tsx","components/GifGridItem.tsx","helpers/getGifs.tsx","components/GifGrid.tsx","hooks/useFetchGifs.tsx","GifExpertApp.tsx","index.tsx"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","dataImage","url","title","className","src","alt","getGifs","category","a","process","encodeURI","fetch","resp","json","data","gifs","map","content","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","setcategories","rootElement","document","getElementById","ReactDOM","render"],"mappings":"qMAOaA,EAAc,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,cAAsC,EAE9BC,mBAAS,IAFqB,mBAE3DC,EAF2D,KAE/CC,EAF+C,KAclE,OACE,0BAAMC,SAPa,SAACC,GACpBA,EAAEC,iBACFJ,EAAWK,OAAOC,OAAS,GAAKR,GAAc,SAACS,GAAD,OAA2BP,GAA3B,mBAA0CO,OACxFN,EAAc,MAKZ,2BACEO,KAAK,OACLC,MAAOT,EACPU,SAfc,SAACP,GACnBF,EAAcE,EAAEQ,OAAOF,YCHdG,EAAc,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,UACpBC,EAAeD,EAAfC,IAAKC,EAAUF,EAAVE,MACb,OACE,yBAAKC,UAAU,4CACb,yBAAKC,IAAKH,EAAKI,IAAKH,IACpB,2BAAIA,K,uBCFGI,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,4DAEPC,KACCA,mCACTR,EAJe,uDAGNQ,mCAHM,cAIqDC,UAAUH,GAJ/D,kBAEPE,MAFO,SAKFE,MAAMV,GALJ,cAKfW,EALe,gBAMEA,EAAKC,OANP,uBAMbC,EANa,EAMbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAQC,GACZhB,MAAOe,EAAQf,MACfD,IAAKgB,EAAQE,OAAOC,iBAAiBnB,QAZpB,kBAiBdc,GAjBc,4CAAH,sDCGPM,EAAU,SAAC,GAAgC,IAA9Bd,EAA6B,EAA7BA,SAA6B,ECX3B,SAACA,GAAsB,IAAD,EAEtBrB,mBAAS,CAAE4B,KAAM,GAAkBQ,SAAS,IAFtB,mBAEzCC,EAFyC,KAElCC,EAFkC,KAShD,OALAC,qBAAU,WACRnB,EAAQC,GACLmB,MAAK,SAACC,GAAD,OAAsBH,EAAS,CAAEV,KAAMa,EAAML,SAAS,SAC7D,CAACf,IAEGgB,EDI2BK,CAAarB,GAAjCY,EAFuC,EAE7CL,KAAcQ,EAF+B,EAE/BA,QAEtB,OACE,oCACE,4BAAKf,GACJe,GACC,uBAAGnB,UAAU,sDAAb,cAEF,yBAAKA,UAAU,aAEXgB,EAAOH,KAAI,SAAChB,GAAD,OAAyB,kBAAE,EAAF,CAAc6B,IAAK7B,EAAUkB,GAAIlB,UAAWA,UEN3E8B,EAjBM,WAAO,IAAD,EAEW5C,mBAAS,CAAC,gBAFrB,mBAElBQ,EAFkB,KAENqC,EAFM,KAIzB,OACE,oCACE,4CACA,kBAAE,EAAF,CAAc9C,cAAe8C,IAC7B,6BAEErC,EAAWsB,KAAI,SAACT,GAAD,OAAsB,kBAAE,EAAF,CAAUsB,IAAKtB,EAAUA,SAAUA,SCT1EyB,G,MAAcC,SAASC,eAAe,SAE5CC,IAASC,OAAQ,kBAAC,EAAD,MAAkBJ,I","file":"static/js/main.6e842ebc.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\ninterface AddCategoryProps {\n  setCategories: Function\n}\n\nexport const AddCategory = ({ setCategories }: AddCategoryProps) => {\n\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    inputValue.trim().length > 0 && setCategories((categories: string[]) => [inputValue, ...categories]);\n    setInputValue('');\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type='text'\n        value={inputValue}\n        onChange={handleInput}\n      />\n    </form>\n  )\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}\n","import React from 'react'\nimport { GifsData } from './GifGrid'\nimport PropTypes from 'prop-types';\n\ninterface GifGridItemProps {\n  dataImage: GifsData\n}\n\n\nexport const GifGridItem = ({ dataImage }: GifGridItemProps) => {\n  const { url, title } = dataImage;\n  return (\n    <div className='card animate__animated animate__fadeInUp'>\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  )\n}\n\nGifGridItem.propTypes = {\n  dataImage: PropTypes.object.isRequired\n}\n","import { GifsData } from '../components/GifGrid';\n\ninterface GifsResponse {\n  id: string\n  title: string\n  images: {\n    downsized_medium: {\n      url: string\n    }\n  }\n}\n\nexport const getGifs = async(category: string) => {\n\n  const limit = process.env.REACT_APP_LIMIT;\n  const apiKey = process.env.REACT_APP_GIPHY_API_KEY;\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=${ apiKey }&q=${encodeURI(category)}&limit=${limit}`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifs = data.map((content: GifsResponse): GifsData => {\n    return {\n      id: content.id,\n      title: content.title,\n      url: content.images.downsized_medium.url\n    }\n\n  });\n\n  return gifs;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\ninterface GifGridProps {\n  category: string;\n}\n\nexport interface GifsData {\n  id: string\n  title: string\n  url: string\n}\n\nexport const GifGrid = ({ category }: GifGridProps) => {\n\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3>{category}</h3>\n      {loading &&\n        <p className='animate__animated animate__flash animate__infinite'>Loading...</p>\n      }\n      <div className='card-grid'>\n        {\n          images.map((dataImage: GifsData) => < GifGridItem key={dataImage.id} dataImage={dataImage} />)\n        }\n      </div>\n    </>\n  )\n}\n\nGifGrid.propTypes = {\n  category: PropTypes.string.isRequired\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\nimport { GifsData } from \"../components/GifGrid\";\n\nexport const useFetchGifs = (category: string) => {\n\n  const [state, setstate] = useState({ data: [] as GifsData[], loading: true });\n\n  useEffect(() => {\n    getGifs(category)\n      .then((imgs: GifsData[]) => setstate({ data: imgs, loading: false }));\n  }, [category]);\n\n  return state;\n} \n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n  const [categories, setcategories] = useState(['Dragon Ball']);\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      < AddCategory setCategories={setcategories} />\n      <hr />\n      {\n        categories.map((category: string) => < GifGrid key={category} category={category} />)\n      }\n    </>\n  );\n\n}\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render( <GifExpertApp />, rootElement );\n"],"sourceRoot":""}