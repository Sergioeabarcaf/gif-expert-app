{"version":3,"sources":["components/AddCategory.tsx","components/GifGridItem.tsx","helpers/getGifs.tsx","components/GifGrid.tsx","hooks/useFetchGifs.tsx","GifExpertApp.tsx","index.tsx"],"names":["AddCategory","props","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","setCategories","categories","type","value","onChange","target","GifGridItem","dataImage","url","title","console","log","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","content","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","setcategories","rootElement","document","getElementById","ReactDOM","render"],"mappings":"qMAMaA,EAAc,SAACC,GAA6B,IAAD,EAEhBC,mBAAS,IAFO,mBAE7CC,EAF6C,KAEjCC,EAFiC,KAapD,OACI,0BAAMC,SANW,SAACC,GAClBA,EAAEC,iBACFJ,EAAWK,OAAOC,OAAS,GAAKR,EAAMS,eAAe,SAACC,GAAD,OAA4BR,GAA5B,mBAA2CQ,SAK5F,2BACAC,KAAK,OACLC,MAAQV,EACRW,SAdY,SAACR,GACjBF,EAAcE,EAAES,OAAOF,YCHlBG,EAAc,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,UAClBC,EAAeD,EAAfC,IAAKC,EAAUF,EAAVE,MAEb,OADAC,QAAQC,IAAIJ,GAER,yBAAKK,UAAU,4CACX,yBAAKC,IAAML,EAAMM,IAAML,IACvB,2BAAKA,K,uBCFJM,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEL,GACRT,EAHa,0FAG6EU,UAAWF,GAHxF,kBAEL,IAFK,SAIAG,MAAOX,GAJP,cAIbY,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAK,SAACC,GACpB,MAAO,CACHC,GAAID,EAAQC,GACZjB,MAAOgB,EAAQhB,MACfD,IAAKiB,EAAQE,OAAOC,iBAAiBpB,QAX1B,kBAgBZe,GAhBY,4CAAH,sDCEPM,EAAU,SAAC,GAAgC,IAA9Bb,EAA6B,EAA7BA,SAA6B,ECV3B,SAAEA,GAAsB,IAAD,EAErBxB,mBAAS,CAAE8B,KAAM,GAAkBQ,SAAS,IAFvB,mBAExCC,EAFwC,KAEjCC,EAFiC,KAS/C,OALAC,qBAAU,WACNlB,EAASC,GACJkB,MAAM,SAACC,GAAD,OAAsBH,EAAS,CAAEV,KAAMa,EAAML,SAAS,SAClE,CAAEd,IAEEe,EDG2BK,CAAapB,GAAjCW,EAFqC,EAE3CL,KAAcQ,EAF6B,EAE7BA,QAEtB,OACI,oCACI,4BAAMd,GACJc,GACE,uBAAGlB,UAAU,sDAAb,cAEJ,yBAAKA,UAAU,aAEHe,EAAOH,KAAK,SAACjB,GAAD,OAAyB,kBAAE,EAAF,CAAc8B,IAAK9B,EAAUmB,GAAInB,UAAWA,UEL1F+B,EAjBM,WAAO,IAAD,EAEa9C,mBAAS,CAAC,gBAFvB,mBAEhBS,EAFgB,KAEJsC,EAFI,KAIvB,OACI,oCACI,4CACA,kBAAE,EAAF,CAAcvC,cAAgBuC,IAC9B,6BAEQtC,EAAWuB,KAAK,SAACR,GAAD,OAAc,kBAAE,EAAF,CAAUqB,IAAKrB,EAAUA,SAAWA,SCThFwB,G,MAAcC,SAASC,eAAe,SAE5CC,IAASC,OAAQ,kBAAC,EAAD,MAAkBJ,I","file":"static/js/main.7d336f84.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\ninterface AddCategoryProps {\n    setCategories: Function\n}\n\nexport const AddCategory = (props: AddCategoryProps) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        inputValue.trim().length > 1 && props.setCategories( (categories: string[]) =>  [inputValue, ...categories])\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n            type='text'\n            value={ inputValue }\n            onChange={ handleInput }\n            />\n        </form>\n    )\n}\n","import React from 'react'\nimport { GifsData } from './GifGrid'\n\ninterface GifGridItemProps {\n    dataImage: GifsData\n}\n\n\nexport const GifGridItem = ({ dataImage }: GifGridItemProps) => {\n    const { url, title } = dataImage;\n    console.log(dataImage);\n    return (\n        <div className='card animate__animated animate__fadeInUp'>\n            <img src={ url } alt={ title } />\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import { GifsData } from '../components/GifGrid';\n\ninterface GifsResponse {\n    id: string\n    title: string\n    images: {\n        downsized_medium: {\n            url: string\n        }\n    }\n}\n\nexport const getGifs = async( category: string ) => {\n\n    const limit = 10;\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=W3atpkF628WfcrLhyjGldHEGMTHLY76G&q=${ encodeURI( category ) }&limit=${limit}`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( (content: GifsResponse): GifsData => {\n        return {\n            id: content.id,\n            title: content.title,\n            url: content.images.downsized_medium.url\n        }\n\n    });\n\n    return gifs;\n}\n","import React from 'react'\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\ninterface GifGridProps {\n    category: string;\n}\n\nexport interface GifsData {\n    id: string\n    title: string\n    url: string\n}\n\nexport const GifGrid = ({ category }: GifGridProps) => {\n\n    const { data: images, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3>{ category }</h3>\n            { loading && \n                <p className='animate__animated animate__flash animate__infinite'>Loading...</p>\n            }\n            <div className='card-grid'>\n                    {\n                        images.map( (dataImage: GifsData) => < GifGridItem key={dataImage.id} dataImage={dataImage} /> )\n                    }\n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\nimport { GifsData } from \"../components/GifGrid\";\n\nexport const useFetchGifs = ( category: string) => {\n  \n    const [state, setstate] = useState({ data: [] as GifsData[], loading: true});\n\n    useEffect(() => {\n        getGifs( category )\n            .then( (imgs: GifsData[]) => setstate({ data: imgs, loading: false }));\n    }, [ category ]);\n\n    return state;\n} ","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    const [categories, setcategories] = useState(['Dragon Ball']);\n\n    return(\n        <>\n            <h2>GifExpertApp</h2>\n            < AddCategory setCategories={ setcategories }/>\n            <hr/>\n                {\n                    categories.map( (category) => < GifGrid key={category} category={ category } />)\n                }\n        </>\n    );\n\n}\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\nimport './index.css';\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render( <GifExpertApp />, rootElement );\n"],"sourceRoot":""}